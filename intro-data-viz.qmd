---
title: "Intro to Data Viz"
format: html
---

## Set up
```{r}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(janitor)
library(scales)
library(leaflet)
library(DT)

```

## Read Data
```{r}
escape_raw <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/urn%3Auuid%3Af119a05b-bbe7-4aea-93c6-85434dcb1c5e")
```

## Exploring data
```{r}
#| eval: false

colnames(escape_raw)
glimpse(escape_raw)
range(escape_raw$sampleDate)
unique(escape_raw$Species)
```

## Cleaning Data

Cleaning column names
```{r}
escape <- escape_raw %>% 
  clean_names() #this function is SO cool

colnames(escape)
```

Calculate the Annual escapements by species and sasap regions

```{r}
annual_esc <- escape %>% #put everything in new df
  separate(sample_date, c("year","month","date"), sep = "-") %>% #makes new cols breaking up sampple_date
  mutate(year = as.numeric(year)) %>% #makes new col year numeric format
  group_by(species, sasap_region, year) %>% #create 3 groups
  summarize(escapement = sum(daily_count)) %>% #sum daily count to new variable
  filter(species %in% c("Chinook", "Sockeye", "Chum", "Coho", "Pink")) # %in% allows you to filter for multiple conditions; filter by multiple species
  #ungroup()

unique(annual_esc$species)

```

## Plotting Data
```{r}
ggplot(data = annual_esc,
       mapping = aes(x = species, y = escapement))+
  geom_col()

```

Making bars blue
```{r}
ggplot(annual_esc,
       aes(x = species, y = escapement))+
  geom_col(fil = "blue") #fill her chnages the color
```

Adding regions to our plot
```{r}
ggplot(annual_esc,
       aes(x = species, y = escapement, fill = sasap_region))+ #fill in aes allows you to add another variable to fill the bar with
  geom_col()
#where you put fill makes a difference!
```


## Create multiple plots
```{r}
annual_esc_2000 <- annual_esc %>% 
  filter(year %in% c(2000:2016))

unique(annual_esc_2000$year)
```

Plotting

```{r}
## Plot with facets
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap( ~ sasap_region,
                scales = "free_y") #plot have diff y-axis limits
```

Customizing plot

```{r}
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap( ~ sasap_region,
                scales = "free_y")+ 
  labs(title = "Annual Salmon Escapement by Region",
       y = "Escapement")+
  theme_bw()+
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 45, vjust = 0.5))+
  scale_y_continuous(labels = comma) #comma is from scales package
```

Saving plot
```{r}
ggsave("plots/annual_salmon_esc_region.jpg", width = 8, height = 6, units = "in") #default saves last plot you ran
```

## Interactive Visualization

Subset data
```{r}
location <- escape %>% 
  distinct(location, latitude, longitude) %>% #gets only distinct values, eliinates repeats
  drop_na() #dont include NAs
```

using `DT` package for interactive tables
```{r}
datatable(location) #good for rendering tables online
```

Use the `leaflet` package to create an interactive map
```{r}
leaflet(location) %>% 
  addTiles() %>% 
  addMarkers(lng = ~longitude,
             lat = ~latitude,
             popup = ~location)
```

Add a tile nd more detail to the map
```{r}
leaflet(location) %>%
    addWMSTiles(
        "https://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv?request=getmap&service=wms&BBOX=-90,-180,90,360&crs=EPSG:4326&format=image/jpeg&layers=gebco_latest&width=1200&height=600&version=1.3.0",
        layers = 'GEBCO_LATEST',
        attribution = "Imagery reproduced from the GEBCO_2022 Grid, WMS 1.3.0 GetMap, www.gebco.net"
    ) %>%
    addCircleMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ location,
        radius = 5,
        # set fill properties
        fillColor = "salmon",
        fillOpacity = 1,
        # set stroke properties
        stroke = T,
        weight = 0.5,
        color = "white",
        opacity = 1
    )
```







